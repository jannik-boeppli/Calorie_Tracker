{
	"info": {
		"_postman_id": "bad7fa0b-fd5d-4312-abb9-bcffdf1e3ed0",
		"name": "Calorie Tracker Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21614228"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "1.1 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"BearerToken\", pm.response.json().access_token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Has access token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token.length > 0).to.eql(true);\r",
									"});\r",
									"\r",
									"pm.test(\"Has access refresh\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.refresh_token.length > 0).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "ayoj",
									"type": "text"
								},
								{
									"key": "password",
									"value": "Test123",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/login",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.2 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body('\"Username or password is missing.\"');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "ayoj",
									"type": "text"
								},
								{
									"key": "password",
									"value": "This is a not valid password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/login",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.3 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body('\"Username or password is missing.\"');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "password",
									"value": "Test123",
									"type": "text"
								},
								{
									"key": "username",
									"value": "this user does not exist",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/login",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "1.4 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body('\"User couldn\\'t be found, please check the credentials\"');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "this user does not exist",
									"type": "text"
								},
								{
									"key": "password",
									"value": "this password is not valid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/login",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1.5 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body('\"Username or password is missing.\"');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "this user does not exist",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "this password is not valid",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/login",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1.6 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body('\"Username or password is missing.\"');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "ayoj",
									"type": "text"
								},
								{
									"key": "password",
									"value": "this password is not valid",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/login",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"login"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1.7 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body('\"Username or password is missing.\"');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "password",
									"value": "Test123",
									"type": "text"
								},
								{
									"key": "username",
									"value": "this user does not exist",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/login",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sign Up",
			"item": [
				{
					"name": "2.1 Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Has id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id.length > 0).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Test User\",\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"User\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/signup",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.2 Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Body is correct\", function () {\r",
									"    pm.response.to.have.body(\"Username already exists\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"Test User\",\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"User\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/signup",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3 Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/signup",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				},
				{
					"name": "2.4 Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/auth/signup",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Add Food",
			"item": [
				{
					"name": "3.1 Add Food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Has id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id.length > 0).to.eql(true);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"food\": {\r\n        \"name\": \"Food\",\r\n        \"nutrition\": {\r\n            \"calories\": 111,\r\n            \"carbs\": 2222,\r\n            \"fat\": 100,\r\n            \"protein\": 100\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/registeredfood",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"registeredfood"
							]
						}
					},
					"response": []
				},
				{
					"name": "3.2 Add Food",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"not-null\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"food\": {\r\n        \"nutrition\": {\r\n            \"calories\": 111,\r\n            \"carbs\": 2222,\r\n            \"fat\": 100,\r\n            \"protein\": 100\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{Protocol}}://{{Host}}:{{Port}}{{api}}/registeredfood",
							"protocol": "{{Protocol}}",
							"host": [
								"{{Host}}"
							],
							"port": "{{Port}}{{api}}",
							"path": [
								"registeredfood"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}